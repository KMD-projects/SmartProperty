[versions]
agp = "8.9.2"
adaptiveCmpVersion = "1.0.1"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-annotation = "1.7.1"
androidx-activityCompose = "1.8.2"
exifinterface = "1.3.7"
composeCmpMaterialNavigationVersion = "1.7.0-beta02"
compose-multiplatform = "1.8.0-beta02"
coil3Version = "3.1.0"
datastore = "1.1.4"
kotlin = "2.1.20"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.8.1"
kotlinx-datetime = "0.6.2"
koin-bom = "4.1.0-Beta7"
ktor = "3.1.2"
lifecycleCmpVersion = "2.8.4"
navigationCmpVersion = "2.9.0-alpha16"
napier = "2.7.1"
google-maps-android = "6.6.0"
multiplatform-paging = "3.3.0-alpha02-0.5.1"
compose = "1.6.11"
androidx-lifecycleViewmodelCompose = "2.7.0"
accompanist = "0.34.0"
camerax = "1.3.2"

[libraries]
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-exifinterface = { group = "androidx.exifinterface", name = "exifinterface", version.ref = "exifinterface" }
components-resources = { group = "org.jetbrains.compose.components", name = "components-resources", version.ref = "compose"}
paging-common = { module = "app.cash.paging:paging-common", version.ref = "multiplatform-paging" }
paging-compose-common = { module = "app.cash.paging:paging-compose-common", version.ref = "multiplatform-paging" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycleViewmodelCompose" }
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist" }
camera-camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "camerax" }
camera-lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "camerax" }
camera-view = { group = "androidx.camera", name = "camera-view", version.ref = "camerax" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinx-coroutines" }

datastore-preference-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }

jetbrains-compose-material-navigation = { group = "org.jetbrains.compose.material", name="material-navigation", version.ref = "composeCmpMaterialNavigationVersion" }
jetbrains-compose-material3-adaptive-navigation-suite = { group = "org.jetbrains.compose.material3", name="material3-adaptive-navigation-suite", version.ref = "compose-multiplatform" }
jetbrains-compose-material3-window-size = { group = "org.jetbrains.compose.material3", name="material3-window-size-class", version.ref = "compose-multiplatform" }
jetbrains-compose-adaptive = { group = "org.jetbrains.compose.material3.adaptive", name="adaptive", version.ref = "adaptiveCmpVersion" }
jetbrains-compose-adaptive-layout = { group = "org.jetbrains.compose.material3.adaptive", name="adaptive-layout", version.ref = "adaptiveCmpVersion" }
jetbrains-compose-adaptive-navigation = { group = "org.jetbrains.compose.material3.adaptive", name="adaptive-navigation", version.ref = "adaptiveCmpVersion" }
jetbrains-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCmpVersion" }
jetbrains-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycleCmpVersion" }
jetbrains-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycleCmpVersion" }

kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

koin-bom = { group = "io.insert-koin", name = "koin-bom", version.ref = "koin-bom" }
koin-test = { group = "io.insert-koin", name = "koin-test" }
koin-core = { group = "io.insert-koin", name = "koin-core" }
koin-android = { group = "io.insert-koin", name = "koin-android" }
koin-compose = { group = "io.insert-koin", name = "koin-compose" }
koin-compose-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel" }
koin-compose-viewmodel-navigation = { group = "io.insert-koin", name = "koin-compose-viewmodel-navigation" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }

coil3-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3Version" }
coil3-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil3Version" }
coil3-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil3Version" }

napier = { module = "io.github.aakira:napier", version.ref = "napier" }

google-maps-android-compose = { group = "com.google.maps.android", name = "maps-compose", version.ref = "google-maps-android" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }